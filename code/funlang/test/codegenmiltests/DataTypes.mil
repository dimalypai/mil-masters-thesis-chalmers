type S = MkS;

type T = MkT (Int -> (Error Unit ::: NonTerm) Unit) | MkTT;

con_MkS : (Error Unit ::: NonTerm) S =
  return [Error Unit ::: NonTerm] MkS;

con_MkT : (Error Unit ::: NonTerm) ((Int -> (Error Unit ::: NonTerm) Unit) -> (Error Unit ::: NonTerm) T) =
  return [Error Unit ::: NonTerm] \(var_0 : Int -> (Error Unit ::: NonTerm) Unit) -> return [Error Unit ::: NonTerm] MkT var_0;

con_MkTT : (Error Unit ::: NonTerm) T =
  return [Error Unit ::: NonTerm] MkTT;

main : (Error Unit ::: (NonTerm ::: IO)) Unit =
  return [Error Unit ::: (NonTerm ::: IO)] unit;

mkS : (Error Unit ::: NonTerm) S =
  con_MkS;

mkT : (Error Unit ::: NonTerm) ((Int -> (Error Unit ::: NonTerm) Unit) -> (Error Unit ::: NonTerm) T) =
  con_MkT;

