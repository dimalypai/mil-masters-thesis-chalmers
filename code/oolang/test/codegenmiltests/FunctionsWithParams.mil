type Maybe A
  = Nothing
  | Just A;

type String
  = Empty_Str
  | Cons_Str Char String;

main : (Error Unit ::: (NonTerm ::: (State ::: IO))) Unit =
  return [Error Unit ::: (NonTerm ::: (State ::: IO))] unit;

intId : Int -> (Error Unit ::: NonTerm) Int =
  \(a : Int) -> return [Error Unit ::: NonTerm] a;

intImpureId : Int -> (Error Unit ::: (NonTerm ::: (State ::: IO))) Int =
  \(a : Int) -> return [Error Unit ::: (NonTerm ::: (State ::: IO))] a;

