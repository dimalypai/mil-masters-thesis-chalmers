type Bool
  = True
  | False;

type Maybe A
  = Nothing
  | Just A;

alias Impure_M = Error Unit ::: State ::: Lift ::: IO ::: Id;

main : Impure_M Unit =
  let (var_0 : Unit) <- lift [Id -> Impure_M] (return [Id] unit) in
    return [Impure_M] var_0;

pureFun : Id Int =
  let (_ : Unit) <- let (var_1 : Unit) <- return [Id] unit in
                      return [Id] var_1 in
    let (var_2 : Int) <- return [Id] 1 in
      return [Id] var_2;

